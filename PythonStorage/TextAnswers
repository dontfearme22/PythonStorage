1)	Explain in a few sentences the differences between properties and methods in Python.

A method is a function inside of (belonging to) a class, 
though not every usage of the term method refers to this specifically as such (the joys of programming).
It is associated to an object that is instantiated from a class. Properties are a bit more arcane. 
They can provide classes with attributes. 
Basically, creating the parameters within which you will call your methods and objects for whatever code you are working on. 
If a class is a blank paper form, an object a single copy of that form filled out, a property 
might be whether that form requires a name or not. While methods perform tasks, properties define the characteristics 
of the space those tasks will be performed in.  

2)	Look at the following statements below and indicate if each one is a property or method and
why.
  a.	arcpy.env.overwriteOutput = True   | Property. overwriteOutput is a crudely speaking, a attribute inside of that class arcpy.env that can either be applied, or not applied, to your code – making it a property. 
  b.	arcpy.SearchCursor(“roads”, “TYPE” <> 4’) | This can be identified as a method because it is associated with the arcpy class and has parameters.
  c.	row.setValue(‘distance’,100)  | This is likely a method because it is associated with the row class and has parameters. 
  d.	ArcGISProject.dateSaved | This is a property because there are no associated parameters.
  e.	Table.isBroken Property. | This is a property because it has no associated parameters.  

3)	Review the following function and explain what you think is happening. 
Are parameters being passed into the function? If so, what’re their data types? 
Write what you think the output of the function would be if it were invoked/called.

def letterFunc (wordParam1, wordParam2):
  if (wordParam1[0].lower() == wordParam2[0].lower()): 
      return True
    else:
      return False
      
This function has two parameters (wordParam1 and wordParam2). They are strings. 
If invoked the function examines the two input variables and will return a boolean value
if the first string character equals the second (the .lower() function makes them lowercase 
so they are the same case for accurate comparison). 

4)	Write a function definition which satisfies the following requirements:
  a.	Accepts a list of names as a parameter
  b.	Prints ‘Happy Birthday’ to each person

def happyBirthday(nameList):
    for x in nameList:
        print(x + " Happy Birthday") 
